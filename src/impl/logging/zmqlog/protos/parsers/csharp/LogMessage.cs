// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Nohros.Logging.ZMQLog {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class LogMessage {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_nohros_logging_ZMQLog_LogMessage__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::Nohros.Logging.ZMQLog.LogMessage, global::Nohros.Logging.ZMQLog.LogMessage.Builder> internal__static_nohros_logging_ZMQLog_LogMessage__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static LogMessage() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "ChBMb2dNZXNzYWdlLnByb3RvEhVub2hyb3MubG9nZ2luZy5aTVFMb2ciUwoK" + 
            "TG9nTWVzc2FnZRINCgVsZXZlbBgBIAEoCRIPCgdtZXNzYWdlGAIgASgJEhIK" + 
            "CnRpbWVfc3RhbXAYAyABKAMSEQoJZXhjZXB0aW9uGAQgASgJQgJIAQ==");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_nohros_logging_ZMQLog_LogMessage__Descriptor = Descriptor.MessageTypes[0];
          internal__static_nohros_logging_ZMQLog_LogMessage__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::Nohros.Logging.ZMQLog.LogMessage, global::Nohros.Logging.ZMQLog.LogMessage.Builder>(internal__static_nohros_logging_ZMQLog_LogMessage__Descriptor,
                  new string[] { "Level", "Message", "TimeStamp", "Exception", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LogMessage : pb::GeneratedMessage<LogMessage, LogMessage.Builder> {
    private LogMessage() { }
    private static readonly LogMessage defaultInstance = new LogMessage().MakeReadOnly();
    private static readonly string[] _logMessageFieldNames = new string[] { "exception", "level", "message", "time_stamp" };
    private static readonly uint[] _logMessageFieldTags = new uint[] { 34, 10, 18, 24 };
    public static LogMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Nohros.Logging.ZMQLog.Proto.LogMessage.internal__static_nohros_logging_ZMQLog_LogMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogMessage, LogMessage.Builder> InternalFieldAccessors {
      get { return global::Nohros.Logging.ZMQLog.Proto.LogMessage.internal__static_nohros_logging_ZMQLog_LogMessage__FieldAccessorTable; }
    }
    
    public const int LevelFieldNumber = 1;
    private bool hasLevel;
    private string level_ = "";
    public bool HasLevel {
      get { return hasLevel; }
    }
    public string Level {
      get { return level_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public const int TimeStampFieldNumber = 3;
    private bool hasTimeStamp;
    private long timeStamp_;
    public bool HasTimeStamp {
      get { return hasTimeStamp; }
    }
    public long TimeStamp {
      get { return timeStamp_; }
    }
    
    public const int ExceptionFieldNumber = 4;
    private bool hasException;
    private string exception_ = "";
    public bool HasException {
      get { return hasException; }
    }
    public string Exception {
      get { return exception_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _logMessageFieldNames;
      if (hasLevel) {
        output.WriteString(1, field_names[1], Level);
      }
      if (hasMessage) {
        output.WriteString(2, field_names[2], Message);
      }
      if (hasTimeStamp) {
        output.WriteInt64(3, field_names[3], TimeStamp);
      }
      if (hasException) {
        output.WriteString(4, field_names[0], Exception);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Level);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Message);
        }
        if (hasTimeStamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, TimeStamp);
        }
        if (hasException) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Exception);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LogMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogMessage result;
      
      private LogMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          LogMessage original = result;
          result = new LogMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Nohros.Logging.ZMQLog.LogMessage.Descriptor; }
      }
      
      public override LogMessage DefaultInstanceForType {
        get { return global::Nohros.Logging.ZMQLog.LogMessage.DefaultInstance; }
      }
      
      public override LogMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogMessage) {
          return MergeFrom((LogMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogMessage other) {
        if (other == global::Nohros.Logging.ZMQLog.LogMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        if (other.HasTimeStamp) {
          TimeStamp = other.TimeStamp;
        }
        if (other.HasException) {
          Exception = other.Exception;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLevel = input.ReadString(ref result.level_);
              break;
            }
            case 18: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
            case 24: {
              result.hasTimeStamp = input.ReadInt64(ref result.timeStamp_);
              break;
            }
            case 34: {
              result.hasException = input.ReadString(ref result.exception_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public string Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = "";
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
      
      public bool HasTimeStamp {
        get { return result.hasTimeStamp; }
      }
      public long TimeStamp {
        get { return result.TimeStamp; }
        set { SetTimeStamp(value); }
      }
      public Builder SetTimeStamp(long value) {
        PrepareBuilder();
        result.hasTimeStamp = true;
        result.timeStamp_ = value;
        return this;
      }
      public Builder ClearTimeStamp() {
        PrepareBuilder();
        result.hasTimeStamp = false;
        result.timeStamp_ = 0L;
        return this;
      }
      
      public bool HasException {
        get { return result.hasException; }
      }
      public string Exception {
        get { return result.Exception; }
        set { SetException(value); }
      }
      public Builder SetException(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasException = true;
        result.exception_ = value;
        return this;
      }
      public Builder ClearException() {
        PrepareBuilder();
        result.hasException = false;
        result.exception_ = "";
        return this;
      }
    }
    static LogMessage() {
      object.ReferenceEquals(global::Nohros.Logging.ZMQLog.Proto.LogMessage.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
